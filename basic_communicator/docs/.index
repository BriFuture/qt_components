<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="" version="5.7.1" project="">
    <namespace threadsafety="unspecified" name="" status="active" access="public">
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="internal" access="private" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="72" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const CommState &amp;cs)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const CommState &amp;" right="" name="cs" default=""/>
        </function>
        <class threadsafety="unspecified" name="AbstractComm" href="abstractcomm.html" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="22" groups="comm" brief="串口通信的接口类，所有具体实现串口通信/网络通讯的相关类都应该继承此类并实现其中的纯虚方法。">
            <function threadsafety="unspecified" name="AbstractComm" fullname="AbstractComm::AbstractComm" href="abstractcomm.html#AbstractComm" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="58" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="AbstractComm()"/>
            <function threadsafety="unspecified" name="state" fullname="AbstractComm::state" href="abstractcomm.html#state" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="CommState &amp;" signature="CommState &amp; state()"/>
            <function threadsafety="unspecified" name="close" fullname="AbstractComm::close" href="abstractcomm.html#close" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="40" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="关闭外部设备连接操作" signature="void close() = 0"/>
            <function threadsafety="unspecified" name="close" fullname="AbstractComm::close" href="abstractcomm.html#close-1" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="59" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="默认的关闭串口/网络操作 提供统一的关闭操作，供子类调用，若子类对关闭操作没有特殊的要求，那么不需要重写关闭操作" signature="void close(QIODevice *device)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
            </function>
            <function threadsafety="unspecified" name="codeMayMessed" fullname="AbstractComm::codeMayMessed" href="abstractcomm.html#codeMayMessed" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="55" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void codeMayMessed()"/>
            <function threadsafety="unspecified" name="init" fullname="AbstractComm::init" href="abstractcomm.html#init" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="39" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="初始化串口/网络，设计串口都是工作在子线程中，因此需要通过信号槽方式， 在子线程中运行初始化函数" signature="void init() = 0"/>
            <function threadsafety="unspecified" name="isStarted" fullname="AbstractComm::isStarted" href="abstractcomm.html#isStarted" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="32" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" associated-property="started" type="bool" brief="返回当前串口/网络设备是否正在运行的标志位" signature="bool isStarted()"/>
            <function threadsafety="unspecified" name="onRead" fullname="AbstractComm::onRead" href="abstractcomm.html#onRead" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="46" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="读取操作，若运行在子线程的循环中，需要显式调用 Qt 的事件分发， 避免子线程无法关闭。" signature="void onRead() = 0"/>
            <function threadsafety="unspecified" name="openComm" fullname="AbstractComm::openComm" href="abstractcomm.html#openComm" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="41" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="根据串口/网络名称，打开新的串口/网络" signature="void openComm(const QString &amp;name) = 0">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="recvLine" fullname="AbstractComm::recvLine" href="abstractcomm.html#recvLine" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="52" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="从串口/网络等设备中接收到的一行数据。 行结束符为 LineSeparator" signature="void recvLine(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="recvRawData" fullname="AbstractComm::recvRawData" href="abstractcomm.html#recvRawData" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="51" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="从串口/网络等设备中接收到的数据，该数据是一行数据中的一部分。" signature="void recvRawData(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendData" fullname="AbstractComm::sendData" href="abstractcomm.html#sendData" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="53" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="表示数据已经发送到外部设备中" signature="void sendData(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="setCommProperty" fullname="AbstractComm::setCommProperty" href="abstractcomm.html#setCommProperty" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="42" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="键和值需要参考 QSerialPort 的 Property 设置串口属性（波特率，停止位等）、网络属性（地址）等" signature="void setCommProperty(const QString &amp;key, const QVariant &amp;value) = 0">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setStarted" fullname="AbstractComm::setStarted" href="abstractcomm.html#setStarted" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="33" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" associated-property="started" type="void" brief="设置标志位，表示串口/网络设备是否可以运行（由控制器设置，但实现类可忽略该标志位）" signature="void setStarted(const bool started)">
                <parameter left="const bool" right="" name="started" default=""/>
            </function>
            <function threadsafety="unspecified" name="setState" fullname="AbstractComm::setState" href="abstractcomm.html#setState" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="36" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="设置状态，注意，所有的子类都共享抽象类里的 static 内存区域， 对某个子类的 state 进行修改，会影响到其它所有的子类。" signature="void setState(const CommState &amp;state)">
                <parameter left="const CommState &amp;" right="" name="state" default=""/>
            </function>
            <function threadsafety="unspecified" name="stateChanged" fullname="AbstractComm::stateChanged" href="abstractcomm.html#stateChanged" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="54" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void stateChanged(const CommState &amp;serial)">
                <parameter left="const CommState &amp;" right="" name="serial" default=""/>
            </function>
            <function threadsafety="unspecified" name="write" fullname="AbstractComm::write" href="abstractcomm.html#write" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="43" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="This is a funciton that actually performs the communication it receives raw string and send it into serial port 将文本数据写入到串口 原始的文本数据" signature="void write(const QByteArray &amp;rawdata) = 0">
                <parameter left="const QByteArray &amp;" right="" name="rawdata" default=""/>
            </function>
            <function threadsafety="unspecified" name="writeData" fullname="AbstractComm::writeData" href="abstractcomm.html#writeData" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="62" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="默认的写串口操作" signature="void writeData(QIODevice *device, const QByteArray &amp;rawdata)">
                <parameter left="QIODevice *" right="" name="device" default=""/>
                <parameter left="const QByteArray &amp;" right="" name="rawdata" default=""/>
            </function>
            <property threadsafety="unspecified" name="started" fullname="AbstractComm::started" href="abstractcomm.html#started-prop" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="27" type="bool">
                <getter name="isStarted"/>
                <setter name="setStarted"/>
            </property>
            <variable threadsafety="unspecified" name="LineSeparator" fullname="AbstractComm::LineSeparator" href="abstractcomm.html#LineSeparator-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="29" type="const QByteArray" static="true"/>
            <variable threadsafety="unspecified" name="PacketMaxSize" fullname="AbstractComm::PacketMaxSize" href="abstractcomm.html#PacketMaxSize-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="30" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="commInfo" fullname="AbstractComm::commInfo" href="abstractcomm.html#commInfo-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="26" type="const CommInfo" static="true"/>
            <variable threadsafety="unspecified" name="m_recvData" fullname="AbstractComm::m_recvData" href="abstractcomm.html#m_recvData-var" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="68" type="QByteArray" static="false"/>
            <variable threadsafety="unspecified" name="m_started" fullname="AbstractComm::m_started" href="abstractcomm.html#m_started-var" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="66" type="bool = false" static="false"/>
            <variable threadsafety="unspecified" name="m_state" fullname="AbstractComm::m_state" href="abstractcomm.html#m_state-var" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="64" type="CommState" static="true"/>
            <variable threadsafety="unspecified" name="m_tmpData" fullname="AbstractComm::m_tmpData" href="abstractcomm.html#m_tmpData-var" status="active" access="protected" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="67" type="QByteArray" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CommState" href="commstate.html" status="internal" access="private" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="8">
            <variable threadsafety="unspecified" name="baudRate" fullname="CommState::baudRate" href="commstate.html#baudRate-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="12" type="int = 9600" static="false"/>
            <variable threadsafety="unspecified" name="deviceName" fullname="CommState::deviceName" href="commstate.html#deviceName-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="10" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="errorString" fullname="CommState::errorString" href="commstate.html#errorString-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="11" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="opened" fullname="CommState::opened" href="commstate.html#opened-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="9" type="bool = false" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CommInfo" href="comminfo.html" status="internal" access="private" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="16">
            <variable threadsafety="unspecified" name="desc" fullname="CommInfo::desc" href="comminfo.html#desc-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="18" type="QString" static="false"/>
            <variable threadsafety="unspecified" name="isHalfDuplex" fullname="CommInfo::isHalfDuplex" href="comminfo.html#isHalfDuplex-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="19" type="bool" static="false"/>
            <variable threadsafety="unspecified" name="type" fullname="CommInfo::type" href="comminfo.html#type-var" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="17" type="QString" static="false"/>
        </class>
        <function threadsafety="unspecified" name="Q_DECLARE_METATYPE" status="internal" access="private" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="74" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="Q_DECLARE_METATYPE(CommState )">
            <parameter left="CommState" right="" name="" default=""/>
        </function>
        <function threadsafety="unspecified" name="operator&lt;&lt;" status="active" access="public" location="abstractcomm.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractcomm.h" lineno="71" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QDebug" signature="QDebug operator&lt;&lt;(QDebug debug, const CommInfo &amp;ci)">
            <parameter left="QDebug" right="" name="debug" default=""/>
            <parameter left="const CommInfo &amp;" right="" name="ci" default=""/>
        </function>
        <class threadsafety="unspecified" name="AbstractProtocol" href="abstractprotocol.html" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="11" groups="comm" brief="用于 Communicator 层的通信接口">
            <function threadsafety="unspecified" name="AbstractProtocol" fullname="AbstractProtocol::AbstractProtocol" href="abstractprotocol.html#AbstractProtocol" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="20" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="AbstractProtocol(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="getCmdExecuteTime" fullname="AbstractProtocol::getCmdExecuteTime" href="abstractprotocol.html#getCmdExecuteTime" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="34" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int getCmdExecuteTime() const"/>
            <function threadsafety="unspecified" name="getCmdTimeout" fullname="AbstractProtocol::getCmdTimeout" href="abstractprotocol.html#getCmdTimeout" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="37" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int getCmdTimeout() const"/>
            <function threadsafety="unspecified" name="setCmdTimeout" fullname="AbstractProtocol::setCmdTimeout" href="abstractprotocol.html#setCmdTimeout" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setCmdTimeout(int cmdTimeout)">
                <parameter left="int" right="" name="cmdTimeout" default=""/>
            </function>
            <function threadsafety="unspecified" name="setPriority" fullname="AbstractProtocol::setPriority" href="abstractprotocol.html#setPriority" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="32" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setPriority(int priority)">
                <parameter left="int" right="" name="priority" default=""/>
            </function>
            <function threadsafety="unspecified" name="clearCmdCount" fullname="AbstractProtocol::clearCmdCount" href="abstractprotocol.html#clearCmdCount" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="24" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void clearCmdCount() = 0"/>
            <function threadsafety="unspecified" name="cmdAdded" fullname="AbstractProtocol::cmdAdded" href="abstractprotocol.html#cmdAdded" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="42" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void cmdAdded()"/>
            <function threadsafety="unspecified" name="enabled" fullname="AbstractProtocol::enabled" href="abstractprotocol.html#enabled" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="bool" brief="AbstractProtocol::enabled  是否使能当前协议" signature="bool enabled() const"/>
            <function threadsafety="unspecified" name="getFirstCmd" fullname="AbstractProtocol::getFirstCmd" href="abstractprotocol.html#getFirstCmd" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="26" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="CommandObject *" signature="CommandObject * getFirstCmd() = 0"/>
            <function threadsafety="unspecified" name="lastQueryFailed" fullname="AbstractProtocol::lastQueryFailed" href="abstractprotocol.html#lastQueryFailed" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="46" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void lastQueryFailed() = 0"/>
            <function threadsafety="unspecified" name="priority" fullname="AbstractProtocol::priority" href="abstractprotocol.html#priority" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" brief="AbstractProtocol::priority 优先级，数值越大，表明优先级越高" signature="int priority() const"/>
            <function threadsafety="unspecified" name="processData" fullname="AbstractProtocol::processData" href="abstractprotocol.html#processData" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="48" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool processData(DataObject *dataObj) = 0">
                <parameter left="DataObject *" right="" name="dataObj" default=""/>
            </function>
            <function threadsafety="unspecified" name="remainCmdCount" fullname="AbstractProtocol::remainCmdCount" href="abstractprotocol.html#remainCmdCount" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="22" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const int" signature="const int remainCmdCount() = 0"/>
            <function threadsafety="unspecified" name="setCmdExecuteTime" fullname="AbstractProtocol::setCmdExecuteTime" href="abstractprotocol.html#setCmdExecuteTime" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="设置指令执行次数（0 表示当前协议将会一直等待指令回复，该值一般不使用， 若在网络不畅时可以使用，即等待超时时间将会被忽略）" signature="void setCmdExecuteTime(int cmdExecuteTime)">
                <parameter left="int" right="" name="cmdExecuteTime" default=""/>
            </function>
            <function threadsafety="unspecified" name="setEnabled" fullname="AbstractProtocol::setEnabled" href="abstractprotocol.html#setEnabled" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="AbstractProtocol::setEnabled  enabled 使能当前协议" signature="void setEnabled(bool enabled)">
                <parameter left="bool" right="" name="enabled" default=""/>
            </function>
            <function threadsafety="unspecified" name="skipCurrentQuery" fullname="AbstractProtocol::skipCurrentQuery" href="abstractprotocol.html#skipCurrentQuery" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="43" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void skipCurrentQuery()"/>
            <function threadsafety="unspecified" name="stopRemainCmd" fullname="AbstractProtocol::stopRemainCmd" href="abstractprotocol.html#stopRemainCmd" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="47" virtual="pure" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void stopRemainCmd() = 0"/>
            <function threadsafety="unspecified" name="totalCmdCount" fullname="AbstractProtocol::totalCmdCount" href="abstractprotocol.html#totalCmdCount" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="23" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const int" signature="const int totalCmdCount() = 0"/>
            <function threadsafety="unspecified" name="xorCODE" fullname="AbstractProtocol::xorCODE" href="abstractprotocol.html#xorCODE" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="17" virtual="non" meta="plain" const="false" static="true" overload="true" delete="false" default="false" final="false" overload-number="0" type="QByteArray" brief="求每个字符的异或值 ( #/$ 与*之间的数值的 XOR 值，不包含 #/$) 根据字符计算出异或校验码" signature="QByteArray xorCODE(const QByteArray &amp;ba)">
                <parameter left="const QByteArray &amp;" right="" name="ba" default=""/>
            </function>
            <variable threadsafety="unspecified" name="defaultMaxExecuteTimes" fullname="AbstractProtocol::defaultMaxExecuteTimes" href="abstractprotocol.html#defaultMaxExecuteTimes-var" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="15" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="defaultTimeout" fullname="AbstractProtocol::defaultTimeout" href="abstractprotocol.html#defaultTimeout-var" status="active" access="public" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="16" type="const int" static="true"/>
            <variable threadsafety="unspecified" name="m_cmdExecuteTime" fullname="AbstractProtocol::m_cmdExecuteTime" href="abstractprotocol.html#m_cmdExecuteTime-var" status="active" access="protected" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="53" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_cmdTimeout" fullname="AbstractProtocol::m_cmdTimeout" href="abstractprotocol.html#m_cmdTimeout-var" status="active" access="protected" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="54" type="int" static="false"/>
            <variable threadsafety="unspecified" name="m_enabled" fullname="AbstractProtocol::m_enabled" href="abstractprotocol.html#m_enabled-var" status="active" access="protected" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="51" type="bool" static="false"/>
            <variable threadsafety="unspecified" name="m_priority" fullname="AbstractProtocol::m_priority" href="abstractprotocol.html#m_priority-var" status="active" access="protected" location="abstractprotocol.h" filepath="H:/GitHub/qt_components/basic_communicator/abstractprotocol.h" lineno="52" type="int" static="false"/>
        </class>
        <class threadsafety="unspecified" name="ComFullDuplex" href="comfullduplex.html" status="active" access="public" location="comfullduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comfullduplex.h" lineno="15" bases="AbstractComm" groups="comm" brief="管理 SerialPort，保证该程序所有类中使用的 SerialPort 对象都是统一的。 串口接收到的数据和上位机程序发送到下位机的指令都通过该类传递。">
            <function threadsafety="unspecified" name="ComFullDuplex" fullname="ComFullDuplex::ComFullDuplex" href="comfullduplex.html#ComFullDuplex" status="active" access="public" location="comfullduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comfullduplex.h" lineno="22" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="Q_INVOKABLE" signature="Q_INVOKABLE ComFullDuplex()"/>
            <function threadsafety="unspecified" name="~ComFullDuplex" fullname="ComFullDuplex::~ComFullDuplex" href="comfullduplex.html#dtor.ComFullDuplex" status="active" access="public" location="comfullduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comfullduplex.h" lineno="23" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="~ComFullDuplex()"/>
        </class>
        <class threadsafety="unspecified" name="ComHalfDuplex" href="comhalfduplex.html" status="active" access="public" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="11" bases="AbstractComm" groups="comm" brief="半双工工作模式的串口">
            <function threadsafety="unspecified" name="ComHalfDuplex" fullname="ComHalfDuplex::ComHalfDuplex" href="comhalfduplex.html#ComHalfDuplex" status="active" access="public" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="18" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="Q_INVOKABLE" signature="Q_INVOKABLE ComHalfDuplex()"/>
            <function threadsafety="unspecified" name="handleQuery" fullname="ComHalfDuplex::handleQuery" href="comhalfduplex.html#handleQuery" status="active" access="private" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="37" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void handleQuery()"/>
            <function threadsafety="unspecified" name="~ComHalfDuplex" fullname="ComHalfDuplex::~ComHalfDuplex" href="comhalfduplex.html#dtor.ComHalfDuplex" status="active" access="public" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="19" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="~ComHalfDuplex()"/>
            <function threadsafety="unspecified" name="blockTime" fullname="ComHalfDuplex::blockTime" href="comhalfduplex.html#blockTime" status="active" access="public" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" brief="返回阻塞的等待时间" signature="int blockTime() const"/>
            <function threadsafety="unspecified" name="setBlockTime" fullname="ComHalfDuplex::setBlockTime" href="comhalfduplex.html#setBlockTime" status="active" access="public" location="comhalfduplex.h" filepath="H:/GitHub/qt_components/basic_communicator/comhalfduplex.h" lineno="22" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="设置阻塞时的等待时间" signature="void setBlockTime(int blockTime)">
                <parameter left="int" right="" name="blockTime" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="CommandObject" href="commandobject.html" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="9" groups="comm" brief="CommandObject::CommandObject  parent">
            <function threadsafety="unspecified" name="CommandObject" fullname="CommandObject::CommandObject" href="commandobject.html#CommandObject" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="22" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommandObject(AbstractProtocol *parent)">
                <parameter left="AbstractProtocol *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="contents" fullname="CommandObject::contents" href="commandobject.html#contents" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="31" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QByteArray" signature="QByteArray contents() const"/>
            <function threadsafety="unspecified" name="getMaxExecuteTimes" fullname="CommandObject::getMaxExecuteTimes" href="commandobject.html#getMaxExecuteTimes" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="25" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int getMaxExecuteTimes() const"/>
            <function threadsafety="unspecified" name="getTimeout" fullname="CommandObject::getTimeout" href="commandobject.html#getTimeout" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="28" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int getTimeout() const"/>
            <function threadsafety="unspecified" name="protocolBelongs" fullname="CommandObject::protocolBelongs" href="commandobject.html#protocolBelongs" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="23" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="AbstractProtocol *" signature="AbstractProtocol * protocolBelongs()"/>
            <function threadsafety="unspecified" name="reply" fullname="CommandObject::reply" href="commandobject.html#reply" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="37" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QByteArray" signature="QByteArray reply() const"/>
            <function threadsafety="unspecified" name="setContents" fullname="CommandObject::setContents" href="commandobject.html#setContents" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="32" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setContents(const QByteArray &amp;value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setMaxExecuteTimes" fullname="CommandObject::setMaxExecuteTimes" href="commandobject.html#setMaxExecuteTimes" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setMaxExecuteTimes(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setReply" fullname="CommandObject::setReply" href="commandobject.html#setReply" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="38" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setReply(const QByteArray &amp;value)">
                <parameter left="const QByteArray &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setState" fullname="CommandObject::setState" href="commandobject.html#setState" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="35" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setState(const State &amp;value)">
                <parameter left="const State &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="setTimeout" fullname="CommandObject::setTimeout" href="commandobject.html#setTimeout" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setTimeout(int value)">
                <parameter left="int" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="state" fullname="CommandObject::state" href="commandobject.html#state" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="34" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="State" signature="State state() const"/>
            <enum threadsafety="unspecified" name="State" fullname="CommandObject::State" href="commandobject.html#State-enum" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="13">
                <value name="Waiting" value="0x0"/>
                <value name="Executing" value="0x1"/>
                <value name="Pending" value="0x2"/>
                <value name="Timeout" value="0x3"/>
                <value name="RightReplied" value="0x4"/>
                <value name="WrongReplied" value="0x5"/>
            </enum>
            <function threadsafety="unspecified" name="stateChanged" fullname="CommandObject::stateChanged" href="commandobject.html#stateChanged" status="active" access="public" location="commandobject.h" filepath="H:/GitHub/qt_components/basic_communicator/commandobject.h" lineno="41" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void stateChanged(const State &amp;m_state)">
                <parameter left="const State &amp;" right="" name="m_state" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="CommBluetooth" href="commbluetooth.html" status="active" access="public" location="commbluetooth.h" filepath="H:/GitHub/qt_components/basic_communicator/commbluetooth.h" lineno="10" bases="AbstractComm" groups="comm" brief="蓝牙通讯模块，由于生产环境中不支持蓝牙通讯，因此该模块暂时不可用">
            <function threadsafety="unspecified" name="CommBluetooth" fullname="CommBluetooth::CommBluetooth" href="commbluetooth.html#CommBluetooth" status="active" access="public" location="commbluetooth.h" filepath="H:/GitHub/qt_components/basic_communicator/commbluetooth.h" lineno="16" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommBluetooth()"/>
        </class>
        <class threadsafety="unspecified" name="CommFactory" href="commfactory.html" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="12" groups="comm" brief="通讯器工厂类，增加抽象通讯类的子类时，在工厂类中添加相应的模式和 构造实现类的例化。 主要作用是构造 AbstractComm 的实例以及返回相应的属性">
            <function threadsafety="unspecified" name="CommFactory" fullname="CommFactory::CommFactory" href="commfactory.html#CommFactory" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="19" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommFactory(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="CommFactory" fullname="CommFactory::CommFactory" href="commfactory.html#CommFactory-1" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="20" virtual="non" meta="copy-constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommFactory(const CommFactory &amp;cf)">
                <parameter left="const CommFactory &amp;" right="" name="cf" default=""/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="CommFactory::operator=" href="commfactory.html#operator-eq" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="21" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void operator=(const CommFactory &amp;cf)">
                <parameter left="const CommFactory &amp;" right="" name="cf" default=""/>
            </function>
            <function threadsafety="unspecified" name="addComm" fullname="CommFactory::addComm" href="commfactory.html#addComm" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="26" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="CommFactory::addComm  metaObject  info 添加一个可用的 AbstractComm 元对象，存放相应的信息，用于构造 AbstractComm 实现类" signature="void addComm(const QMetaObject &amp;metaObject, const CommInfo &amp;info)">
                <parameter left="const QMetaObject &amp;" right="" name="metaObject" default=""/>
                <parameter left="const CommInfo &amp;" right="" name="info" default=""/>
            </function>
            <function threadsafety="unspecified" name="commClassName" fullname="CommFactory::commClassName" href="commfactory.html#commClassName" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="34" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const QString" brief="根据通讯器类型和工作模式（是否为半双工）返回相应的通讯器类名 类名在构造通讯器时中用到" signature="const QString commClassName(const QString &amp;type, const bool halfDuplex)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
                <parameter left="const bool" right="" name="halfDuplex" default=""/>
            </function>
            <function threadsafety="unspecified" name="commInfo" fullname="CommFactory::commInfo" href="commfactory.html#commInfo" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="28" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="QList&lt;CommInfo&gt;" brief="提供接口用于显示可用的通讯模式 返回的 comm 对象用于界面显示 m_commMap 包含的键值对中，键位类名，值为对应的 commInfo" signature="QList&lt;CommInfo&gt; commInfo()"/>
            <function threadsafety="unspecified" name="createComm" fullname="CommFactory::createComm" href="commfactory.html#createComm" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="24" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="AbstractComm *" brief="根据 className 例化相应的通讯实现类" signature="AbstractComm * createComm(const QString &amp;className)">
                <parameter left="const QString &amp;" right="" name="className" default=""/>
            </function>
            <function threadsafety="unspecified" name="defaultFactory" fullname="CommFactory::defaultFactory" href="commfactory.html#defaultFactory" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="22" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" type="CommFactory *" brief="CommFactory::defaultFactory  返回默认的工程对象" signature="CommFactory * defaultFactory()"/>
            <function threadsafety="unspecified" name="supportHalfDuplex" fullname="CommFactory::supportHalfDuplex" href="commfactory.html#supportHalfDuplex" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="29" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" brief="根据通讯器的类型 type（SerialPort，Network） 判断其是否支持半双工模式 用于界面，方便选择具体的通讯器" signature="bool supportHalfDuplex(const QString &amp;type)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
            </function>
            <function threadsafety="unspecified" name="usableComm" fullname="CommFactory::usableComm" href="commfactory.html#usableComm" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="32" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QVector&lt;QMetaObject&gt;" brief="CommFactory::usableComm  返回可用的元对象列表，用于动态构造对象" signature="QVector&lt;QMetaObject&gt; usableComm() const"/>
            <variable threadsafety="unspecified" name="defaultCommName" fullname="CommFactory::defaultCommName" href="commfactory.html#defaultCommName-var" status="active" access="public" location="commfactory.h" filepath="H:/GitHub/qt_components/basic_communicator/commfactory.h" lineno="18" type="const QString" static="true"/>
        </class>
        <namespace threadsafety="unspecified" name="Comm" href="comm.html" status="active" access="public" location="commglobal.h" filepath="H:/GitHub/qt_components/basic_communicator/commglobal.h" lineno="10" brief="Comm::destroy 销毁通讯层组件">
            <function threadsafety="unspecified" name="destroy" fullname="Comm::destroy" href="comm.html#destroy" status="active" access="public" location="commglobal.h" filepath="H:/GitHub/qt_components/basic_communicator/commglobal.h" lineno="14" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void destroy()"/>
            <function threadsafety="unspecified" name="init" fullname="Comm::init" href="comm.html#init" status="active" access="public" location="commglobal.h" filepath="H:/GitHub/qt_components/basic_communicator/commglobal.h" lineno="13" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void init()"/>
        </namespace>
        <class threadsafety="unspecified" name="CommManager" href="commmanager.html" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="37" groups="comm" brief="通讯管理器，传递查询语句和结果管理串口子线程的作用，封装了多线程，向外部提供统一的 接口，起到类似中介的作用，将 AbstractProtocol 和实际执行串口/网络访问的类（子线程中）聚合起来，方便迭代更新">
            <function threadsafety="unspecified" name="CommManager" fullname="CommManager::CommManager" href="commmanager.html#CommManager" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="42" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommManager(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="onTimeout" fullname="CommManager::onTimeout" href="commmanager.html#onTimeout" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="90" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void onTimeout()"/>
            <function threadsafety="unspecified" name="protocol" fullname="CommManager::protocol" href="commmanager.html#protocol" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="53" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="AbstractProtocol *" signature="AbstractProtocol * protocol(const QString &amp;objectName)">
                <parameter left="const QString &amp;" right="" name="objectName" default=""/>
            </function>
            <function threadsafety="unspecified" name="protocolList" fullname="CommManager::protocolList" href="commmanager.html#protocolList" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="52" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const QList&lt;AbstractProtocol *&gt; &amp;" signature="const QList&lt;AbstractProtocol *&gt; &amp; protocolList()"/>
            <function threadsafety="unspecified" name="removeAllProtocol" fullname="CommManager::removeAllProtocol" href="commmanager.html#removeAllProtocol" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="50" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void removeAllProtocol()"/>
            <function threadsafety="unspecified" name="stopAllQuery" fullname="CommManager::stopAllQuery" href="commmanager.html#stopAllQuery" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="81" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void stopAllQuery()"/>
            <function threadsafety="unspecified" name="write" fullname="CommManager::write" href="commmanager.html#write" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="91" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void write()"/>
            <function threadsafety="unspecified" name="abstractComm" fullname="CommManager::abstractComm" href="commmanager.html#abstractComm" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="64" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="AbstractComm *" brief="返回当前所用的通讯器" signature="AbstractComm * abstractComm() const"/>
            <function threadsafety="unspecified" name="addProtocol" fullname="CommManager::addProtocol" href="commmanager.html#addProtocol" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="48" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void addProtocol(AbstractProtocol *p)">
                <parameter left="AbstractProtocol *" right="" name="p" default=""/>
            </function>
            <function threadsafety="unspecified" name="close" fullname="CommManager::close" href="commmanager.html#close" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="83" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="关闭串口并清空指令队列" signature="void close()"/>
            <function threadsafety="unspecified" name="cmdCountChanged" fullname="CommManager::cmdCountChanged" href="commmanager.html#cmdCountChanged" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="71" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void cmdCountChanged(const int remain, const int all)">
                <parameter left="const int" right="" name="remain" default=""/>
                <parameter left="const int" right="" name="all" default=""/>
            </function>
            <function threadsafety="unspecified" name="codeMayMessed" fullname="CommManager::codeMayMessed" href="commmanager.html#codeMayMessed" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="70" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void codeMayMessed()"/>
            <function threadsafety="unspecified" name="commInfoChanged" fullname="CommManager::commInfoChanged" href="commmanager.html#commInfoChanged" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="69" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void commInfoChanged(const CommInfo &amp;ci)">
                <parameter left="const CommInfo &amp;" right="" name="ci" default=""/>
            </function>
            <function threadsafety="unspecified" name="currentCommInfo" fullname="CommManager::currentCommInfo" href="commmanager.html#currentCommInfo" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="55" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const CommInfo &amp;" brief="返回当前通讯器的 CommInfo " signature="const CommInfo &amp; currentCommInfo()"/>
            <function threadsafety="unspecified" name="delProtocol" fullname="CommManager::delProtocol" href="commmanager.html#delProtocol" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="49" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="删除管理器中的协议" signature="void delProtocol(AbstractProtocol *p)">
                <parameter left="AbstractProtocol *" right="" name="p" default=""/>
            </function>
            <function threadsafety="unspecified" name="getProtocol" fullname="CommManager::getProtocol" href="commmanager.html#getProtocol" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="58" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="T" signature="T getProtocol(const QString &amp;objectName)">
                <parameter left="const QString &amp;" right="" name="objectName" default=""/>
            </function>
            <function threadsafety="unspecified" name="init" fullname="CommManager::init" href="commmanager.html#init" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="94" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="将 mode 字符串传递给负责构造 AbstractComm 的工厂类。 Pass the mode string into CommFactory::defaultFactory() that responds for construct BaseComm @param mode" signature="void init(const QString &amp;name)">
                <parameter left="const QString &amp;" right="" name="name" default=""/>
            </function>
            <function threadsafety="unspecified" name="onRecvLineData" fullname="CommManager::onRecvLineData" href="commmanager.html#onRecvLineData" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="88" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="接收到来自串口的数据后，将其转发给各个协议" signature="void onRecvLineData(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="onStateChanged" fullname="CommManager::onStateChanged" href="commmanager.html#onStateChanged" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="87" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="在设备的状态改变时，将状态转发给其它层" signature="void onStateChanged(const CommState &amp;state)">
                <parameter left="const CommState &amp;" right="" name="state" default=""/>
            </function>
            <function threadsafety="unspecified" name="onWriteFinish" fullname="CommManager::onWriteFinish" href="commmanager.html#onWriteFinish" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="89" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="在实际串口执行完查询后进行相应操作" signature="void onWriteFinish()"/>
            <function threadsafety="unspecified" name="openDevice" fullname="CommManager::openDevice" href="commmanager.html#openDevice" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="84" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="打开指定设备，若参数 name 为空，则默认打开最后一次使用的设备" signature="void openDevice(const QString &amp;name)">
                <parameter left="const QString &amp;" right="" name="name" default="&quot;&quot;"/>
            </function>
            <function threadsafety="unspecified" name="recvLineData" fullname="CommManager::recvLineData" href="commmanager.html#recvLineData" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="74" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void recvLineData(const QByteArray &amp;data, const int count)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
                <parameter left="const int" right="" name="count" default="0"/>
            </function>
            <function threadsafety="unspecified" name="recvRawData" fullname="CommManager::recvRawData" href="commmanager.html#recvRawData" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="73" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void recvRawData(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="resetMode" fullname="CommManager::resetMode" href="commmanager.html#resetMode-1" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="46" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" overload-number="1" type="void" brief="指定的className，重设Comm模式 提供该接口是为了在某些特殊情况下，现有的通讯器无法满足要求，需要扩展通讯器时，通过该方法生成自定义的通讯器类" signature="void resetMode(const QString &amp;className)">
                <parameter left="const QString &amp;" right="" name="className" default=""/>
            </function>
            <function threadsafety="unspecified" name="resetMode" fullname="CommManager::resetMode" href="commmanager.html#resetMode" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="45" virtual="non" meta="plain" const="false" static="false" overload="true" delete="false" default="false" final="false" overload-number="0" type="void" brief="CommManager::resetMode" signature="void resetMode(const QString &amp;type, const bool halfDuplex)">
                <parameter left="const QString &amp;" right="" name="type" default=""/>
                <parameter left="const bool" right="" name="halfDuplex" default=""/>
            </function>
            <function threadsafety="unspecified" name="sendData" fullname="CommManager::sendData" href="commmanager.html#sendData" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="75" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void sendData(const QByteArray &amp;data)">
                <parameter left="const QByteArray &amp;" right="" name="data" default=""/>
            </function>
            <function threadsafety="unspecified" name="setCommProperty" fullname="CommManager::setCommProperty" href="commmanager.html#setCommProperty" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="67" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setCommProperty(const QString &amp;key, const QVariant &amp;value)">
                <parameter left="const QString &amp;" right="" name="key" default=""/>
                <parameter left="const QVariant &amp;" right="" name="value" default=""/>
            </function>
            <function threadsafety="unspecified" name="startNextQuery" fullname="CommManager::startNextQuery" href="commmanager.html#startNextQuery" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="82" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="若协议中有指令未执行，接着执行下一条指令" signature="void startNextQuery()"/>
            <function threadsafety="unspecified" name="startQuery" fullname="CommManager::startQuery" href="commmanager.html#startQuery" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="80" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="发送的指令可能不会立即被下位机执行，需要等待一定时间接收下位机的反馈。" signature="void startQuery()"/>
            <function threadsafety="unspecified" name="state" fullname="CommManager::state" href="commmanager.html#state" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="const CommState &amp;" brief="返回串口状态" signature="const CommState &amp; state()"/>
            <function threadsafety="unspecified" name="stateChanged" fullname="CommManager::stateChanged" href="commmanager.html#stateChanged" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="76" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void stateChanged(const CommState &amp;state)">
                <parameter left="const CommState &amp;" right="" name="state" default=""/>
            </function>
            <function threadsafety="unspecified" name="~CommManager" fullname="CommManager::~CommManager" href="commmanager.html#dtor.CommManager" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="43" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" brief="关闭串口/网路，结束子线程" signature="~CommManager()"/>
            <variable threadsafety="unspecified" name="m_abstractComm" fullname="CommManager::m_abstractComm" href="commmanager.html#m_abstractComm-var" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="97" type="AbstractComm *= Q_NULLPTR" static="false"/>
            <variable threadsafety="unspecified" name="m_state" fullname="CommManager::m_state" href="commmanager.html#m_state-var" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="98" type="CommState" static="false"/>
            <variable threadsafety="unspecified" name="m_subThread" fullname="CommManager::m_subThread" href="commmanager.html#m_subThread-var" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="96" type="QThread *= Q_NULLPTR" static="false"/>
            <variable threadsafety="unspecified" name="util" fullname="CommManager::util" href="commmanager.html#util-var" status="active" access="protected" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="100" type="CommManagerUtil" static="false"/>
        </class>
        <class threadsafety="unspecified" name="CommManagerUtil" href="commmanagerutil.html" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="14" brief="助手类，统计接收到的语句、指令队列中的待查询指令数">
            <function threadsafety="unspecified" name="executeCmd" fullname="CommManagerUtil::executeCmd" href="commmanagerutil.html#executeCmd" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="19" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="bool" signature="bool executeCmd()"/>
            <function threadsafety="unspecified" name="CommManagerUtil" fullname="CommManagerUtil::CommManagerUtil" href="commmanagerutil.html#CommManagerUtil" status="active" access="private" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="22" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="CommManagerUtil(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="calcProtocolCmd" fullname="CommManagerUtil::calcProtocolCmd" href="commmanagerutil.html#calcProtocolCmd" status="active" access="public" location="commmanager.h" filepath="H:/GitHub/qt_components/basic_communicator/commmanager.h" lineno="18" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" brief="@return 当前所有协议（包括 MSP 协议和网络服务器协议或指令集）的指令队列中等待查询的命令数" signature="void calcProtocolCmd()"/>
        </class>
        <class threadsafety="unspecified" name="CommNetwork" href="commnetwork.html" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="10" bases="AbstractComm" groups="comm" brief="网络连接方式，接收服务器数据或将数据发送到相应的服务器端口中">
            <function threadsafety="unspecified" name="host" fullname="CommNetwork::host" href="commnetwork.html#host-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="20" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" associated-property="host" type="QString" signature="QString host() const"/>
            <function threadsafety="unspecified" name="port" fullname="CommNetwork::port" href="commnetwork.html#port-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="21" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" associated-property="port" type="qint16" signature="qint16 port() const"/>
            <function threadsafety="unspecified" name="remoteId" fullname="CommNetwork::remoteId" href="commnetwork.html#remoteId-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="22" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" associated-property="remoteId" type="int" signature="int remoteId() const"/>
            <property threadsafety="unspecified" name="host" fullname="CommNetwork::host" href="commnetwork.html#host-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="13" type="QString">
                <getter name="host"/>
            </property>
            <property threadsafety="unspecified" name="port" fullname="CommNetwork::port" href="commnetwork.html#port-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="14" type="int">
                <getter name="port"/>
            </property>
            <property threadsafety="unspecified" name="remoteId" fullname="CommNetwork::remoteId" href="commnetwork.html#remoteId-prop" status="active" access="public" location="commnetwork.h" filepath="H:/GitHub/qt_components/basic_communicator/commnetwork.h" lineno="15" type="int">
                <getter name="remoteId"/>
            </property>
        </class>
        <class threadsafety="unspecified" name="DataObject" href="dataobject.html" status="internal" access="private" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="6">
            <function threadsafety="unspecified" name="DataObject" fullname="DataObject::DataObject" href="dataobject.html#DataObject" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="10" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="DataObject(QObject *parent)">
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="DataObject" fullname="DataObject::DataObject" href="dataobject.html#DataObject-1" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="11" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" type="" signature="DataObject(const QByteArray &amp;content, QObject *parent)">
                <parameter left="const QByteArray &amp;" right="" name="content" default=""/>
                <parameter left="QObject *" right="" name="parent" default="0"/>
            </function>
            <function threadsafety="unspecified" name="content" fullname="DataObject::content" href="dataobject.html#content" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="13" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="QByteArray" signature="QByteArray content() const"/>
            <function threadsafety="unspecified" name="index" fullname="DataObject::index" href="dataobject.html#index" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="16" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" type="int" signature="int index() const"/>
            <function threadsafety="unspecified" name="setContent" fullname="DataObject::setContent" href="dataobject.html#setContent" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="14" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setContent(const QByteArray &amp;content)">
                <parameter left="const QByteArray &amp;" right="" name="content" default=""/>
            </function>
            <function threadsafety="unspecified" name="setIndex" fullname="DataObject::setIndex" href="dataobject.html#setIndex" status="active" access="public" location="dataobject.h" filepath="H:/GitHub/qt_components/basic_communicator/dataobject.h" lineno="17" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" type="void" signature="void setIndex(int index)">
                <parameter left="int" right="" name="index" default=""/>
            </function>
        </class>
        <class threadsafety="unspecified" name="VirtualCom" href="virtualcom.html" status="active" access="public" location="virtualcom.h" filepath="H:/GitHub/qt_components/basic_communicator/virtualcom.h" lineno="9" bases="AbstractComm" groups="comm" brief="虚拟串口用于模拟下位机发送数据"/>
        <group name="comm" href="comm.html" status="active" seen="true" title="Communication Layer Related" members="AbstractComm,AbstractProtocol,ComFullDuplex,ComHalfDuplex,CommandObject,CommBluetooth,CommFactory,CommManager,CommNetwork,VirtualCom"/>
    </namespace>
</INDEX>
